services:
  mysql:
    container_name: mysql
    image: mysql:8.2.0
    restart: always
    ports:
      - "${MYSQL_PORT}:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - user_network

  postgres_keycloak:
    image: postgres:17.3
    container_name: postgres_keycloak
    restart: always
    ports:
      - "${POSTGRES_PORT}:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - user_network

  keycloak:
    image: quay.io/keycloak/keycloak:26.3.2
    container_name: keycloak
    restart: always
    ports:
      - "${KEYCLOAK_PORT}:8080"
    environment:
      - KC_DB=postgres
      - KC_DB_URL=${KEYCLOAK_URL}
      - KC_DB_USERNAME=${KEYCLOAK_USER}
      - KC_DB_PASSWORD=${KEYCLOAK_PASSWORD}

      - KC_HOSTNAME=${KEYCLOAK_HOSTNAME}
      - KC_HOSTNAME_STRICT=false

      - KC_LOG_LEVEL=info
      - KC_METRICS_ENABLED=true
      - KC_HEALTH_ENABLED=true
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
    command: start-dev
    depends_on:
      - postgres_keycloak
    networks:
      - user_network

  vault:
    image: vault:1.13.3
    container_name: vault
    restart: always
    ports:
      - "${VAULT_PORT}:8200"
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: ${VAULT_DEV_ROOT_TOKEN_ID}
      VAULT_DEV_LISTEN_ADDRESS: ${VAULT_DEV_LISTEN_ADDRESS}
    cap_add:
      - IPC_LOCK
    command: server -dev

volumes:
  mysql_data:
  postgres_data:

networks:
  user_network: